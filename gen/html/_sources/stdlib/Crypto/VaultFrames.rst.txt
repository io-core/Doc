####################################
  VaultFrames Module 
####################################
 
++++++++
  About  
++++++++
 
+++++++++++++++++
  Command Guide  
+++++++++++++++++
 
Module VaultFrames provides a user-interface for manipulating secrets and vaults.
 
+++++++++++++
  API Guide  
+++++++++++++
 
++++++++++++++++
  Dependencies  
++++++++++++++++
 
.. code-block:: none
 
   SYSTEM Display Viewers Input Fonts Texts Vaults Oberon MenuViewers
 
+++++++++++++
  Constants  
+++++++++++++
.. code-block:: none
 
 (*update message ids*)
    drawdocument = 1; drawdocuments = 2; drawdocumentd = 3;
    drawnorm = 4; drawsel = 5; drawdel = 6;

    markW = 5;
 
+++++++++
  Types  
+++++++++
.. code-block:: none
 

    Frame* = POINTER TO FrameDesc;
    Location* = POINTER TO LocDesc;

    LocDesc* = RECORD
        x*, y*: INTEGER;
        next*: Location
      END ;

    FrameDesc* = RECORD (Display.FrameDesc)
        vault*: Vaults.Vault;
        Xg*, Yg*: INTEGER;  (*pos rel to vault origin*)
        X1*, Y1*: INTEGER;  (*right and upper margins*)
        x*, y*, col*: INTEGER;  (*x = X + Xg, y = Y + Yg*)
        marked*, ticked*: BOOLEAN;
        mark*: LocDesc
      END ;

    DrawMsg* = RECORD (Vaults.Msg)
        f*: Frame;
        x*, y*, col*, mode*: INTEGER
      END ;

    UpdateMsg = RECORD (Display.FrameMsg)
        id: INTEGER;
        vault: Vaults.Vault;
        document: Vaults.Document
      END ;

    ChangedMsg = RECORD (Display.FrameMsg)
        f: Frame;
        vault: Vaults.Vault;
        mode: INTEGER
      END ;

    SelQuery = RECORD (Display.FrameMsg)
        f: Frame; time: LONGINT
      END ;

    FocusQuery = RECORD (Display.FrameMsg)
        f: Frame
      END ;

    PosQuery = RECORD (Display.FrameMsg)
        f: Frame; x, y: INTEGER
      END ;

    DispMsg = RECORD (Display.FrameMsg)
        x1, y1, w: INTEGER;
        pat: INTEGER;
        vault: Vaults.Vault
      END ;
 
++++++++++++
  Variables  
++++++++++++
.. code-block:: none
 
 Crosshair*: Oberon.Marker;
    tack*, dotted*, dotted1*: INTEGER;  (*patterns*)
    (* newcap: Graphics.Caption; *)
    TBuf: Texts.Buffer;
    DW, DH, CL: INTEGER;
    w: Texts.Writer;
 
++++++++++++++++++++++++++++
  Functions and Procedures  
++++++++++++++++++++++++++++
.. code-block:: none
 
::
  PROCEDURE SetChangeMark(f: Frame; col: INTEGER); (*set mark in corner of frame*)

::
  PROCEDURE Restore*(f: Frame);

::
  PROCEDURE FlipCross(X, Y: INTEGER);

::
  PROCEDURE Focus*(): Frame;

::
  PROCEDURE Selected*(): Frame;

::
  PROCEDURE This*(x, y: INTEGER): Frame;

::
  PROCEDURE Mark(f: Frame; mode: INTEGER);

::
  PROCEDURE Draw*(f: Frame);

::
  PROCEDURE DrawNorm(f: Frame);

::
  PROCEDURE Erase*(f: Frame);

::
  PROCEDURE DrawDocument*(f: Frame; L: Vaults.Document);

::
  PROCEDURE EraseDocument*(f: Frame; D: Vaults.Document);

::
  PROCEDURE Change*(f: Frame; VAR msg: Vaults.Msg);

::
  PROCEDURE FlipMark(x, y: INTEGER);

::
  PROCEDURE Defocus*(f: Frame);

::
  PROCEDURE Deselect*(f: Frame);

::
  PROCEDURE Edit(f: Frame; x0, y0: INTEGER; k0: SET);

::
  PROCEDURE NewCaption(f: Frame; col: INTEGER; font: Fonts.Font);

::
  PROCEDURE InsertChar(f: Frame; codepoint: INTEGER);

::
  PROCEDURE DeleteChar(f: Frame);

::
  PROCEDURE GetSelection(f: Frame; VAR text: Texts.Text; VAR beg, end: (*, time:*) LONGINT);

::
  PROCEDURE Handle*(f: Display.Frame; VAR m: Display.FrameMsg);

::
  PROCEDURE Store*(f: Frame; name: ARRAY OF CHAR);

::
  PROCEDURE ReplConst*(F: Frame; col, x, y, w, h, mode: INTEGER);

::
  PROCEDURE ReplPattern*(F: Frame; col, patadr, x, y, w, h, mode: INTEGER);

::
  PROCEDURE DrawLine(obj: Vaults.Document; VAR m: Vaults.Msg);

::
  PROCEDURE DrawCaption(obj: Vaults.Document; VAR m: Vaults.Msg);

::
  PROCEDURE DrawMacro(obj: Vaults.Document; VAR m: Vaults.Msg);

::
  PROCEDURE Open*(f: Frame; V: Vaults.Vault);
 
++++++++++++++++++++
  Development Guide 
++++++++++++++++++++
 

 
https://github.com/io-core/Crypto/blob/main/VaultFrames.Mod

