####################################
  Kernel Module 
####################################
 
++++++++
  About  
++++++++
 
+++++++++++++++++
  Command Guide  
+++++++++++++++++
 

 
+++++++++++++
  API Guide  
+++++++++++++
 
++++++++++++++++
  Dependencies  
++++++++++++++++
 
.. code-block:: none
 
   SYSTEM
 
+++++++++++++
  Constants  
+++++++++++++
.. code-block:: none
 
 SectorLength* = 1024;
    timer = -64; spiData = -48; spiCtrl = -44;
    CARD0 = 1; SPIFAST = 4;
    FSoffset = 80000H; (*256MB in 512-byte blocks*)
    mapsize = 10000H; (*1K sectors, 64MB*)
 
+++++++++
  Types  
+++++++++
.. code-block:: none
 
 Sector* = ARRAY SectorLength OF BYTE;
 
++++++++++++
  Variables  
++++++++++++
.. code-block:: none
 
 allocated*, NofSectors*: INTEGER;
    heapOrg*, heapLim*: INTEGER; 
    stackOrg* ,  stackSize*, MemLim*: INTEGER;
    clock: INTEGER;
    list0, list1, list2, list3: INTEGER;  (*lists of free blocks of size n*256, 128, 64, 32 bytes*)
    data: INTEGER; (*SPI data in*)
    sectorMap: ARRAY mapsize DIV 32 OF SET;
 
++++++++++++++++++++++++++++
  Functions and Procedures  
++++++++++++++++++++++++++++
.. code-block:: none
 
::
  PROCEDURE Klog*(s: ARRAY OF CHAR);

::
  PROCEDURE Klogln*(s: ARRAY OF CHAR);

::
  PROCEDURE GetBlock(VAR p: LONGINT; len: LONGINT);

::
  PROCEDURE GetBlock128(VAR p: LONGINT);

::
  PROCEDURE GetBlock64(VAR p: LONGINT);

::
  PROCEDURE GetBlock32(VAR p: LONGINT);

::
   PROCEDURE New*(VAR ptr: LONGINT; tag: LONGINT);

::
  PROCEDURE Mark*(pref: LONGINT);

::
  PROCEDURE Scan*;

::
  PROCEDURE SPIIdle(n: INTEGER); (*send n FFs slowly with no card selected*)

::
  PROCEDURE SPI(n: INTEGER); (*send&rcv byte slowly with card selected*)

::
  PROCEDURE SPICmd(n, arg: INTEGER);

::
  PROCEDURE SDShift(VAR n: INTEGER);

::
  PROCEDURE ReadSD(src, dst: INTEGER);

::
  PROCEDURE WriteSD(dst, src: INTEGER);

::
  PROCEDURE InitSecMap*;

::
  PROCEDURE MarkSector*(sec: INTEGER);

::
  PROCEDURE FreeSector*(sec: INTEGER);

::
  PROCEDURE AllocSector*(hint: INTEGER; VAR sec: INTEGER);

::
  PROCEDURE GetSector*(src: INTEGER; VAR dst: Sector);

::
  PROCEDURE PutSector*(dst: INTEGER; VAR src: Sector);

::
  PROCEDURE Time*(): INTEGER;

::
  PROCEDURE Clock*(): INTEGER;

::
  PROCEDURE SetClock*(dt: INTEGER);

::
  PROCEDURE Install*(Padr, at: INTEGER);

::
  PROCEDURE Trap(VAR a: INTEGER; b: INTEGER);

::
  PROCEDURE Init*;
 
++++++++++++++++++++
  Development Guide 
++++++++++++++++++++
 

 
https://github.com/io-core/Kernel/blob/main/Kernel.Mod

